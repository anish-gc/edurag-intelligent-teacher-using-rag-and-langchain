# Generated by Django 5.2.4 on 2025-07-12 15:34

import django.db.models.deletion
import pgvector.django.vector
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ContentTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#007bff', max_length=7)),
            ],
            options={
                'db_table': 'content_tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('parent_topic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subtopics', to='knowledge_base.topic')),
            ],
            options={
                'db_table': 'topics',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(db_index=True, max_length=255)),
                ('subtopic', models.CharField(blank=True, max_length=100, null=True)),
                ('grade', models.CharField(choices=[('K', 'Kindergarten'), ('1', 'Grade 1'), ('2', 'Grade 2'), ('3', 'Grade 3'), ('4', 'Grade 4'), ('5', 'Grade 5'), ('6', 'Grade 6'), ('7', 'Grade 7'), ('8', 'Grade 8'), ('9', 'Grade 9'), ('10', 'Grade 10'), ('11', 'Grade 11'), ('12', 'Grade 12'), ('college', 'College'), ('general', 'General')], db_index=True, max_length=10)),
                ('content_type', models.CharField(choices=[('textbook', 'Textbook'), ('lecture', 'Lecture Notes'), ('exercise', 'Exercise'), ('example', 'Worked Example'), ('summary', 'Summary'), ('quiz', 'Quiz/Assessment'), ('reference', 'Reference Material'), ('other', 'Other')], default='textbook', max_length=20)),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='intermediate', max_length=20)),
                ('content_text', models.TextField()),
                ('file_path', models.FileField(blank=True, null=True, upload_to='content_files/')),
                ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                ('file_type', models.CharField(default='txt', max_length=10)),
                ('embedding', pgvector.django.vector.VectorField(blank=True, dimensions=1536, null=True)),
                ('embedding_model', models.CharField(default='text-embedding-3-small', max_length=50)),
                ('metadata', models.JSONField(default=dict)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_processed', models.BooleanField(default=False)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('retrieval_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_accessed', models.DateTimeField(blank=True, null=True)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='knowledge_base.topic')),
            ],
            options={
                'db_table': 'content',
                'ordering': ['topic', 'grade', 'title'],
            },
        ),
        migrations.CreateModel(
            name='ContentTagging',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='knowledge_base.content')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_items', to='knowledge_base.contenttag')),
            ],
            options={
                'db_table': 'content_tagging',
                'unique_together': {('content', 'tag')},
            },
        ),
        migrations.AddIndex(
            model_name='content',
            index=models.Index(fields=['topic', 'grade'], name='content_topic_i_029505_idx'),
        ),
        migrations.AddIndex(
            model_name='content',
            index=models.Index(fields=['content_type'], name='content_content_bc205e_idx'),
        ),
        migrations.AddIndex(
            model_name='content',
            index=models.Index(fields=['difficulty_level'], name='content_difficu_cf5ae8_idx'),
        ),
        migrations.AddIndex(
            model_name='content',
            index=models.Index(fields=['is_active', 'is_processed'], name='content_is_acti_ef8bca_idx'),
        ),
        migrations.AddIndex(
            model_name='content',
            index=models.Index(fields=['created_at'], name='content_created_7c9dab_idx'),
        ),
    ]
